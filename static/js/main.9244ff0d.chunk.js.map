{"version":3,"sources":["reportWebVitals.js","component/DigitalBall.js","component/LeftTimeDisplay.js","img/logo.svg","component/TopBlock.js","component/MidBlock.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","DigitalBall","props","className","digital","unit","LeftTimeDisplay","useState","days","setDays","hours","setHours","mins","setMins","secs","setSecs","useEffect","repeat","setInterval","now","Date","remainSeconds","target","getTime","remainDays","Math","floor","remainHour","remainMins","remainSecs","clearInterval","TopBlock","src","logo","alt","MidBlock","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mLAYeA,G,WAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,cCECQ,EATK,SAACC,GACnB,OACE,sBAAKC,UAAU,eAAf,UACE,8BAAMD,EAAME,UACZ,8BAAMF,EAAMG,WC0CHC,EAzCS,SAACJ,GAEvB,MAAwBK,mBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BF,mBAAS,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAwBJ,mBAAS,GAAjC,mBAAOK,EAAP,KAAaC,EAAb,KACA,EAAwBN,mBAAS,GAAjC,mBAAOO,EAAP,KAAaC,EAAb,KA0BA,OAxBAC,qBAAU,WACR,IAAIC,EAASC,aACX,WACE,IAAIC,EAAM,IAAIC,KACVC,GAAiBnB,EAAMoB,OAAOC,UAAYJ,EAAII,WAAa,IAE3DC,EAAaC,KAAKC,MAAML,EAAgB,OACxCM,EAAaF,KAAKC,MAAML,EAAgB,MAAQ,MAChDO,EAAaH,KAAKC,MAAML,EAAgB,KAAO,IAC/CQ,EAAaJ,KAAKC,MAAML,EAAgB,IAE5CZ,EAAQe,GACRb,EAASgB,GACTd,EAAQe,GACRb,EAAQc,KACP,KAGL,OAAO,WACLC,cAAcb,MAGf,CAACf,EAAMoB,SAGR,sBAAKnB,UAAU,mBAAf,UACE,cAAC,EAAD,CAAaC,QAASI,EAAMH,KAAK,SACjC,cAAC,EAAD,CAAaD,QAASM,EAAOL,KAAK,UAClC,cAAC,EAAD,CAAaD,QAASQ,EAAMP,KAAK,YACjC,cAAC,EAAD,CAAaD,QAASU,EAAMT,KAAK,gBCzCxB,MAA0B,iCCc1B0B,EAXE,WACf,OACE,sBAAK5B,UAAU,YAAf,UACI,qBAAKA,UAAU,OAAO6B,IAAKC,EAAMC,IAAI,SACrC,oBAAI/B,UAAU,yBAAd,SAAwC,gBACxC,oBAAIA,UAAU,wBAAd,oCACA,cAAC,EAAD,CAAiBmB,OAAQ,IAAIF,KAAK,6BCL3Be,EAJE,WACf,OAAO,qBAAKhC,UAAU,eCOxBiC,IAASC,OACP,eAAC,IAAMC,WAAP,WACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,OAEFC,SAASC,eAAe,SAM1BhD,K","file":"static/js/main.9244ff0d.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const DigitalBall = (props) => {\n  return (\n    <div className=\"digital-ball\">\n      <div>{props.digital}</div>\n      <div>{props.unit}</div>\n    </div>\n  );\n};\n\nexport default DigitalBall;\n","import { useEffect, useState } from \"react\";\nimport DigitalBall from \"./DigitalBall\";\n\n\n\nconst LeftTimeDisplay = (props) => {\n\n  const [days, setDays] = useState(0);\n  const [hours, setHours] = useState(0);\n  const [mins, setMins] = useState(0);\n  const [secs, setSecs] = useState(0);\n\n  useEffect(() => {\n    let repeat = setInterval(\n      () => {\n        let now = new Date();\n        let remainSeconds = (props.target.getTime() - now.getTime()) / 1000;\n\n        let remainDays = Math.floor(remainSeconds / 86400);\n        let remainHour = Math.floor(remainSeconds % 86400 / 3600);\n        let remainMins = Math.floor(remainSeconds % 3600 / 60);\n        let remainSecs = Math.floor(remainSeconds % 60);\n\n        setDays(remainDays);\n        setHours(remainHour);\n        setMins(remainMins);\n        setSecs(remainSecs);\n      }, 1000\n    );\n\n    return () => {\n      clearInterval(repeat);\n    }\n    \n  }, [props.target]);\n\n  return (\n    <div className=\"lefttime-display\">\n      <DigitalBall digital={days} unit=\"DAYS\" />\n      <DigitalBall digital={hours} unit=\"HOURS\" />\n      <DigitalBall digital={mins} unit=\"MINUTES\" />\n      <DigitalBall digital={secs} unit=\"SECONDS\" />\n    </div>\n  );\n};\n\nexport default LeftTimeDisplay;\n","export default __webpack_public_path__ + \"static/media/logo.291c13d6.svg\";","import LeftTimeDisplay from \"./LeftTimeDisplay\";\nimport logo from \"../img/logo.svg\";\n\nconst TopBlock = () => {\n  return (\n    <div className=\"top-block\">\n        <img className=\"logo\" src={logo} alt=\"logo\" />\n        <h1 className=\"block-title white-text\">{\"ATai & Fish\"}</h1>\n        <h2 className=\"block-text white-text\">We Are Getting Married</h2>\n        <LeftTimeDisplay target={new Date('2021/12/19 12:00:00')} />\n    </div>\n  );\n}\n\nexport default TopBlock;\n","const MidBlock = () => {\n  return <div className=\"mid-block\"></div>;\n}\n\nexport default MidBlock;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/App.css';\nimport './css/index.css';\nimport reportWebVitals from './reportWebVitals';\nimport TopBlock from './component/TopBlock'\nimport MidBlock from './component/MidBlock'\n\nReactDOM.render(\n  <React.StrictMode>\n    <TopBlock />\n    <MidBlock />\n    <TopBlock />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}