{"version":3,"sources":["reportWebVitals.js","component/DigitalBall.js","component/LeftTimeDisplay.js","img/logo.svg","component/PageBlock.js","component/TopBlock.js","component/MidBlock.js","app.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","DigitalBall","props","className","digital","unit","remainTime","target","now","Date","remainSeconds","getTime","Math","floor","LeftTimeDisplay","initDays","initHours","initMins","initSecs","useState","days","setDays","hours","setHours","mins","setMins","secs","setSecs","useEffect","repeat","setInterval","remainDays","remainHour","remainMins","remainSecs","clearInterval","getPageHeight","window","innerHeight","PageBlock","pageHeight","setPageHeight","addEventListener","class","style","height","children","TopBlock","src","logo","alt","MidBlock","APP","currentPage","setCurrentPage","preScrollTop","activeInterval","runStopChecker","scrollStopChecker","document","documentElement","scrollTop","changePage","console","log","runChangeChecker","scrollChangeChecker","page","id","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.bc163d3d.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const DigitalBall = (props) => {\n  return (\n    <div className=\"digital-ball\">\n      <div>{props.digital}</div>\n      <div>{props.unit}</div>\n    </div>\n  );\n};\n\nexport default DigitalBall;\n","import { useEffect, useState } from \"react\";\nimport DigitalBall from \"./DigitalBall\";\n\n\nconst remainTime = (target) => {\n  let now = new Date();\n  let remainSeconds = (target.getTime() - now.getTime()) / 1000;\n\n  let remainDays = Math.floor(remainSeconds / 86400);\n  let remainHour = Math.floor(remainSeconds % 86400 / 3600);\n  let remainMins = Math.floor(remainSeconds % 3600 / 60);\n  let remainSecs = Math.floor(remainSeconds % 60);\n\n  return [remainDays, remainHour, remainMins, remainSecs]\n}\n\n\nconst LeftTimeDisplay = (props) => {\n\n  let [initDays, initHours, initMins, initSecs] = remainTime(props.target);\n\n  const [days, setDays] = useState(initDays);\n  const [hours, setHours] = useState(initHours);\n  const [mins, setMins] = useState(initMins);\n  const [secs, setSecs] = useState(initSecs);\n\n  useEffect(() => {\n    let repeat = setInterval(\n      () => {\n        let [remainDays, remainHour, remainMins, remainSecs] = remainTime(props.target);\n\n        setDays(remainDays);\n        setHours(remainHour);\n        setMins(remainMins);\n        setSecs(remainSecs);\n      }, 1000\n    );\n\n    return () => {\n      clearInterval(repeat);\n    }\n    \n  }, [props.target]);\n\n  return (\n    <div className=\"lefttime-display\">\n      <DigitalBall digital={days} unit=\"DAYS\" />\n      <DigitalBall digital={hours} unit=\"HOURS\" />\n      <DigitalBall digital={mins} unit=\"MINUTES\" />\n      <DigitalBall digital={secs} unit=\"SECONDS\" />\n    </div>\n  );\n};\n\nexport default LeftTimeDisplay;\n","export default __webpack_public_path__ + \"static/media/logo.291c13d6.svg\";","import { useState } from \"react\";\n\nconst getPageHeight = () => window.innerHeight;\n\nconst PageBlock = (props) => {\n  const [pageHeight, setPageHeight] = useState(getPageHeight());\n\n  let changeBlockHeight = () => setPageHeight(getPageHeight());\n\n  window.addEventListener(\"resize\", changeBlockHeight);\n\n  return (\n    <div className={`page-block ${props.class}`} style={{ height: pageHeight }}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default PageBlock;\n","import React from \"react\";\nimport LeftTimeDisplay from \"./LeftTimeDisplay\";\nimport logo from \"../img/logo.svg\";\nimport PageBlock from \"./PageBlock\";\n\nconst TopBlock = () => {\n  return (\n    <PageBlock class=\"top-block\">\n      <img className=\"logo\" src={logo} alt=\"logo\" />\n      <h1 className=\"block-title white-text\">{\"ATai & Fish\"}</h1>\n      <h2 className=\"block-text white-text\">We Are Getting Married</h2>\n      <LeftTimeDisplay target={new Date(\"2021/12/19 12:00:00\")} />\n    </PageBlock>\n  );\n};\n\nexport default TopBlock;\n","import PageBlock from \"./PageBlock\";\nconst MidBlock = () => {\n  return <PageBlock class=\"mid-block\"></PageBlock>;\n}\n\nexport default MidBlock;\n","import React, { useState } from \"react\";\nimport \"./css/App.css\";\nimport \"./css/index.css\";\nimport TopBlock from \"./component/TopBlock\";\nimport MidBlock from \"./component/MidBlock\";\n\nconst APP = () => {\n  const [currentPage, setCurrentPage] = useState(0);\n\n  let preScrollTop = 0;\n  let activeInterval = null;\n\n  const runStopChecker = () => {\n    if (activeInterval === null) {\n      const scrollStopChecker = setInterval(() => {\n        if (document.documentElement.scrollTop === preScrollTop) {\n          if (document.documentElement.scrollTop % window.innerHeight !== 0) {\n            changePage(currentPage);\n          } else {\n            clearInterval(scrollStopChecker);\n            activeInterval = null;\n            console.log(\"scroll stop\");\n            runChangeChecker();\n          }\n        }\n\n        console.log(\"...\");\n        preScrollTop = document.documentElement.scrollTop;\n      }, 100);\n\n      activeInterval = scrollStopChecker;\n    }\n  };\n\n  const runChangeChecker = () => {\n    if (activeInterval === null) {\n      const scrollChangeChecker = setInterval(() => {\n        if (document.documentElement.scrollTop !== preScrollTop) {\n          let page = currentPage;\n\n          if (document.documentElement.scrollTop > preScrollTop) {\n            page += 1;\n          } else {\n            page -= 1;\n          }\n          setCurrentPage(page);\n          changePage(page);\n\n          clearInterval(scrollChangeChecker);\n          console.log(\"scroll\");\n          runStopChecker();\n        }\n        console.log(\"...\");\n        preScrollTop = document.documentElement.scrollTop;\n      }, 100);\n\n      activeInterval = scrollChangeChecker;\n    }\n  };\n\n  const changePage = (page) => {\n    document.documentElement.scrollTop = page * window.innerHeight;\n  };\n\n  runStopChecker();\n\n  return (\n    <div id=\"app\">\n      <TopBlock />\n      <MidBlock />\n      <TopBlock />\n    </div>\n  );\n};\n\nexport default APP;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/App.css';\nimport './css/index.css';\nimport reportWebVitals from './reportWebVitals';\nimport APP from './app';\n\nReactDOM.render(\n  <APP />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}